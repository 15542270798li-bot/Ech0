name: Release

on:
  push:
    tags:
      - 'v*'  # Ëß¶ÂèëÊù°‰ª∂ÔºöÊâì TagÔºåÊØîÂ¶Ç v1.0.0

permissions:
  contents: write
  packages: write

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    outputs:
      asset: ${{ steps.upload-frontend.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: 'web/pnpm-lock.yaml'
      - name: Install and build
        working-directory: ./web
        run: pnpm install && pnpm build --mode production
      - name: Package frontend
        run: tar -czvf frontend.tar.gz -C web/dist .
      - name: Upload frontend artifact
        id: upload-frontend
        uses: actions/upload-artifact@v4
        with:
          name: frontend-asset
          path: frontend.tar.gz
          retention-days: 2

  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: build-frontend
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          # - goos: linux
          #   goarch: loong64
          # - goos: linux
          #   goarch: riscv64
          # - goos: linux
          #   goarch: s390x
    steps:
      - name: üîÑ Checkout source code
        uses: actions/checkout@v4

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-asset
          path: ./

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          fail-on-cache-miss: false

      - name: üß∞ Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'
      
      - name: üßô Set Go proxy
        run: go env -w GOPROXY=https://proxy.golang.org,direct

      - name: üõ†Ô∏è Build Go backend (${{ matrix.goos }}/${{ matrix.goarch }})
        run: |
          mkdir -p dist
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=${{ matrix.goarm }} CGO_ENABLED=0 \
            go build -o dist/ech0-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }} ./cmd/ech0/main.go
          else
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
            go build -o dist/ech0-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/ech0/main.go
          fi

      - name: üì¶ Package backend binary
        run: |
          cd dist
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            tar -czvf ech0-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }}.tar.gz ech0-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }}
          else
            tar -czvf ech0-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz ech0-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: üì¶ Package config.yaml only
        if: matrix.goarch == 'amd64' && matrix.goos == 'linux'
        run: tar -czvf dist/ech0-config.tar.gz -C config config.yaml

      - name: üì¶ Package final release bundle
        run: |
          mkdir -p dist/ech0-release/config
          mkdir -p dist/ech0-release/template
          mkdir -p dist/ech0-release/data

          # Ëß£ÂéãÂâçÁ´ØÊûÑÂª∫‰∫ßÁâ©
          tar -xzvf frontend.tar.gz -C dist/ech0-release/template

          if [ "${{ matrix.goarch }}" = "arm" ]; then
            cp dist/ech0-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }} dist/ech0-release/ech0
          else
            cp dist/ech0-${{ matrix.goos }}-${{ matrix.goarch }} dist/ech0-release/ech0
          fi

          cp -r config/* dist/ech0-release/config/

          cd dist
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            tar -czvf ech0-release-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }}.tar.gz ech0-release
          else
            tar -czvf ech0-release-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz ech0-release
          fi
          rm -rf ech0-release
              
      - name: üöÄ Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [build-frontend, build-binaries]  # ‰æùËµñÂâç‰∏§‰∏™ job
    steps:
      - name: üîÑ Checkout source code
        uses: actions/checkout@v4
        
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-asset
          path: ./
          
      - name: üê≥ Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
          
      - name: üê≥ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ech0:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/ech0:latest
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/ech0:${{ github.ref_name }}
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/ech0:latest